<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Hacker News 中文摘要 Feed</title>
        <link>https://hn.wangbase.com</link>
        <description>Hacker News 文章链接的中文摘要</description>
        <lastBuildDate>Mon, 06 Oct 2025 03:10:06 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>zh-CN</language>
        <item>
            <title><![CDATA[撤销混淆]]></title>
            <link>https://nullpxl.com/post/revocation-confusion/</link>
            <guid isPermaLink="false">https://nullpxl.com/post/revocation-confusion/</guid>
            <pubDate>Mon, 06 Oct 2025 02:30:59 GMT</pubDate>
            <content:encoded><![CDATA[这篇文章讨论了关于证书撤销的混乱情况。作者探讨了证书撤销列表(CRL)和在线证书状态协议(OCSP)在安全通信中的实际应用问题。文中分析了为什么撤销机制常常失败，以及用户和企业面临的实际挑战。作者可能提出了改进建议，使证书撤销过程更加可靠和用户友好。 [<a href="https://news.ycombinator.com/item?id=45487099" target="_blank">评论</a>]]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[我应该选择Ada、SPARK还是Rust来替代C/C++？]]></title>
            <link>https://blog.adacore.com/should-i-choose-ada-spark-or-rust-over-c-c</link>
            <guid isPermaLink="false">https://blog.adacore.com/should-i-choose-ada-spark-or-rust-over-c-c</guid>
            <pubDate>Mon, 06 Oct 2025 01:35:03 GMT</pubDate>
            <content:encoded><![CDATA[这篇文章比较了Ada、SPARK和Rust这三种现代编程语言与传统的C/C++之间的优劣势。作者从安全性、可靠性、性能和生态系统等角度进行了分析。Ada和SPARK特别强调安全关键型应用，Rust则通过所有权系统提供内存安全，同时保持高性能。文章可能帮助开发者根据项目需求选择最适合的编程语言，特别是在安全性和性能要求高的场景中。 [<a href="https://news.ycombinator.com/item?id=45486829" target="_blank">评论</a>]]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Mic-E-Mouse - 通过计算机鼠标进行隐蔽监听]]></title>
            <link>https://sites.google.com/view/mic-e-mouse</link>
            <guid isPermaLink="false">https://sites.google.com/view/mic-e-mouse</guid>
            <pubDate>Mon, 06 Oct 2025 01:34:31 GMT</pubDate>
            <content:encoded><![CDATA[Mic-E-Mouse项目展示了如何利用计算机鼠标的麦克风进行隐蔽的音频监听。研究人员发现，许多现代鼠标内置麦克风且缺乏适当的物理屏蔽，这使其成为潜在的窃听设备。该项目演示了如何利用这种硬件漏洞，即使在鼠标不使用时也能捕捉环境声音。这项研究突显了硬件安全漏洞的潜在风险，以及加强消费电子产品安全防护的重要性。 [<a href="https://news.ycombinator.com/item?id=45486825" target="_blank">评论</a>]]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[基于规则的专家系统：Mycin实验(1984)]]></title>
            <link>https://www.shortliffe.net/Buchanan-Shortliffe-1984/MYCIN%20Book.htm</link>
            <guid isPermaLink="false">https://www.shortliffe.net/Buchanan-Shortliffe-1984/MYCIN%20Book.htm</guid>
            <pubDate>Sun, 05 Oct 2025 23:51:47 GMT</pubDate>
            <content:encoded><![CDATA[这是关于Mycin专家系统的历史资料，Mycin是1970年代开发的用于诊断血液感染的早期专家系统。该系统基于医学专家的知识和推理规则，能够提供诊断和治疗建议。这本1984年的书籍记录了Mycin系统的开发过程、技术细节以及它在医学人工智能领域的影响。Mycin代表了早期专家系统研究的重要里程碑，为后来的知识工程和医疗AI系统奠定了基础。 [<a href="https://news.ycombinator.com/item?id=45486306" target="_blank">评论</a>]]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[生成式AI的能源需求正在改变我们的世界]]></title>
            <link>https://spectrum.ieee.org/ai-energy-use</link>
            <guid isPermaLink="false">https://spectrum.ieee.org/ai-energy-use</guid>
            <pubDate>Sun, 05 Oct 2025 23:00:23 GMT</pubDate>
            <content:encoded><![CDATA[本文探讨了生成式人工智能系统日益增长的能源消耗及其对环境和能源格局的影响。大型语言模型和生成式AI训练需要大量计算资源，导致电力消耗显著增加。文章分析了这些系统对数据中心、电网和整体碳足迹的影响，同时讨论了可能的节能技术和可持续发展的解决方案。作者可能强调了在推动AI创新的同时，需要更加关注能源效率和环境可持续性的平衡。 [<a href="https://news.ycombinator.com/item?id=45486031" target="_blank">评论</a>]]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[德国为五十万个阳台安装了太阳能电池板]]></title>
            <link>https://grist.org/buildings/how-germany-outfitted-half-a-million-balconies-with-solar-panels/</link>
            <guid isPermaLink="false">https://grist.org/buildings/how-germany-outfitted-half-a-million-balconies-with-solar-panels/</guid>
            <pubDate>Sun, 05 Oct 2025 22:18:31 GMT</pubDate>
            <content:encoded><![CDATA[这篇文章介绍了德国推动分布式太阳能发电的创新举措，即在公寓楼的阳台上安装小型太阳能电池板。这种微型太阳能系统使城市居民即使在没有屋顶空间的情况下也能参与可再生能源生产。文章探讨了这一趋势如何帮助德国实现可再生能源目标，以及它对能源民主化和减少碳排放的贡献。这种阳台太阳能解决方案代表了城市可再生能源利用的创新模式。 [<a href="https://news.ycombinator.com/item?id=45485806" target="_blank">评论</a>]]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[著名制琴师肯·帕克去世]]></title>
            <link>https://kenparkerarchtops.com</link>
            <guid isPermaLink="false">https://kenparkerarchtops.com</guid>
            <pubDate>Sun, 05 Oct 2025 22:10:15 GMT</pubDate>
            <content:encoded><![CDATA[这篇文章悼念了著名吉他制作大师肯·帕克的逝世。帕克以其创新的吉他设计和制作工艺闻名于世，特别是他开发的浮动琴桥系统。他的吉他被世界各地的音乐家和收藏家高度重视。文章回顾了帕克的职业生涯、他对吉他制作行业的贡献以及他的标志性设计理念。帕克的离世代表了一个吉他制作时代的结束，他的创新精神和工艺遗产将继续影响未来的制琴师。 [<a href="https://news.ycombinator.com/item?id=45485736" target="_blank">评论</a>]]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[工业设计的终结与枯燥电子产品的时代]]></title>
            <link>https://hackaday.com/2025/07/23/the-death-of-industrial-design-and-the-era-of-dull-electronics/</link>
            <guid isPermaLink="false">https://hackaday.com/2025/07/23/the-death-of-industrial-design-and-the-era-of-dull-electronics/</guid>
            <pubDate>Sun, 05 Oct 2025 20:55:26 GMT</pubDate>
            <content:encoded><![CDATA[这篇文章批评了现代电子产品设计的平庸化趋势。作者认为，追求成本最小化和功能至上的设计理念导致了许多电子产品缺乏美学和创新设计，变得单调乏味。文章对比了过去具有标志性设计的产品与当前市场上的同质化电子产品，反思了工业设计在技术创新与商业成功之间的平衡。作者呼吁制造商重新重视产品的美学价值和用户体验，而不仅仅是功能和价格。 [<a href="https://news.ycombinator.com/item?id=45485175" target="_blank">评论</a>]]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Toybox：一站式Linux命令行工具集]]></title>
            <link>https://github.com/landley/toybox</link>
            <guid isPermaLink="false">https://github.com/landley/toybox</guid>
            <pubDate>Sun, 05 Oct 2025 19:09:35 GMT</pubDate>
            <content:encoded><![CDATA[Toybox是一个小型的、符合POSIX标准的Linux命令行工具集，旨在替代传统的busybox和coreutils项目。它提供了常用的命令行工具，但代码更加精简高效。该工具集特别适合资源受限的系统，如嵌入式设备。Toybox的模块化设计使其易于定制，可以根据需要包含或排除特定工具。项目目标是创建一个干净、简单、遵循标准的命令行环境，同时保持足够的实用性和兼容性。 [<a href="https://news.ycombinator.com/item?id=45484284" target="_blank">评论</a>]]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[GPT-OSS泄露了关于OpenAI训练数据的哪些信息]]></title>
            <link>https://fi-le.net/oss/</link>
            <guid isPermaLink="false">https://fi-le.net/oss/</guid>
            <pubDate>Sun, 05 Oct 2025 18:28:16 GMT</pubDate>
            <content:encoded><![CDATA[这篇文章分析了GPT-OSS模型可能泄露的OpenAI训练数据相关信息。研究者发现，通过某些特定的提示和查询，GPT-OSS可能会暴露其训练数据中的具体内容、来源和分布情况。这种信息泄露可能揭示了OpenAI用于训练模型的文本数据集的构成，包括可能存在的偏见和未公开的内容来源。文章讨论了这种数据泄露对AI隐私、安全性和透明度的影响，以及对AI模型开发实践的启示。 [<a href="https://news.ycombinator.com/item?id=45483924" target="_blank">评论</a>]]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[使用模板函数对象实现C++回调(1994)]]></title>
            <link>http://www.tutok.sk/fastgl/callback.html</link>
            <guid isPermaLink="false">http://www.tutok.sk/fastgl/callback.html</guid>
            <pubDate>Sun, 05 Oct 2025 17:50:17 GMT</pubDate>
            <content:encoded><![CDATA[这是一篇1994年的技术文章，介绍了如何在C++中使用模板函数对象（functors）实现回调机制。回调是编程中常用的模式，允许函数作为参数传递并在特定条件下执行。文章详细解释了使用模板技术创建可重用回调函数的方法，以及这种方法如何克服早期C++中的一些限制。虽然这篇文章年代较早，但它介绍的技术原理对理解C++函数对象和模板编程的发展具有重要历史价值，为后来的std::function和lambda表达式等现代C++特性奠定了基础。 [<a href="https://news.ycombinator.com/item?id=45483651" target="_blank">评论</a>]]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[展示HN：ut - 基于Rust的开发人员和IT人员命令行工具]]></title>
            <link>https://github.com/ksdme/ut</link>
            <guid isPermaLink="false">https://github.com/ksdme/ut</guid>
            <pubDate>Sun, 05 Oct 2025 17:36:20 GMT</pubDate>
            <content:encoded><![CDATA[ut是一个用Rust编写的多功能命令行工具集，专为开发人员和IT专业人员设计。该工具提供了常用系统管理任务的简化命令，包括文件操作、网络管理、进程监控等功能。其特点是使用简单，参数设计直观，且充分利用了Rust语言的性能优势和安全特性。项目目标是创建一个轻量级但功能全面的工具集，减少在不同工具之间切换的需求，提高日常系统管理任务的效率。 [<a href="https://news.ycombinator.com/item?id=45483531" target="_blank">评论</a>]]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[火灾摧毁韩国政府云存储系统，无备份可用]]></title>
            <link>https://koreajoongangdaily.joins.com/news/2025-10-01/national/socialAffairs/NIRS-fire-destroys-governments-cloud-storage-system-no-backups-available/2412936</link>
            <guid isPermaLink="false">https://koreajoongangdaily.joins.com/news/2025-10-01/national/socialAffairs/NIRS-fire-destroys-governments-cloud-storage-system-no-backups-available/2412936</guid>
            <pubDate>Sun, 05 Oct 2025 17:20:39 GMT</pubDate>
            <content:encoded><![CDATA[这则新闻报道了一起重大IT事件：一场火灾摧毁了韩国国家研究信息系统(NIRS)的云存储设施，更严重的是，该系统没有有效的备份。这场灾难导致大量政府研究数据和公共服务信息面临永久丢失的风险。文章报道了事件详情、政府应对措施以及专家对数据恢复可能性的评估。此事件凸显了数据备份策略和灾难恢复计划的重要性，特别是在处理关键政府数据时的必要性。 [<a href="https://news.ycombinator.com/item?id=45483386" target="_blank">评论</a>]]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[通过监督学习框架实现RLVR的隐式行动者-批评者耦合]]></title>
            <link>https://arxiv.org/abs/2509.02522</link>
            <guid isPermaLink="false">https://arxiv.org/abs/2509.02522</guid>
            <pubDate>Sun, 05 Oct 2025 17:01:19 GMT</pubDate>
            <content:encoded><![CDATA[这是一篇研究论文，提出了一种结合监督学习和强化学习的新方法，用于解决远程视觉导航(RLVR)问题。研究团队设计了一个隐式的行动者-批评者框架，通过监督学习预训练模型，然后在强化学习环境中进行微调。这种方法旨在提高智能体在复杂视觉环境中的导航效率和鲁棒性。论文详细描述了算法原理、实验设置和结果分析，证明了该方法在模拟和真实环境中的有效性和优越性。 [<a href="https://news.ycombinator.com/item?id=45483205" target="_blank">评论</a>]]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[比亚迪打造全球最快汽车]]></title>
            <link>https://www.autotrader.co.uk/content/news/byd-builds-world-s-fastest-car</link>
            <guid isPermaLink="false">https://www.autotrader.co.uk/content/news/byd-builds-world-s-fastest-car</guid>
            <pubDate>Sun, 05 Oct 2025 15:54:01 GMT</pubDate>
            <content:encoded><![CDATA[这则新闻报道了中国汽车制造商比亚迪推出了一款打破世界纪录的电动汽车，据称是全球最快的量产车。这款车型采用了先进的电池技术和创新设计，实现了惊人的加速能力和最高时速。文章介绍了车辆的技术规格、性能特点以及比亚迪在电动汽车领域的技术突破。这一成就标志着中国汽车工业在全球电动车市场的竞争力显著提升，也反映了电动汽车技术的快速发展。 [<a href="https://news.ycombinator.com/item?id=45482516" target="_blank">评论</a>]]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[NFS四十周年 - 纪念Sun Microsystems的网络文件系统]]></title>
            <link>https://nfs40.online/</link>
            <guid isPermaLink="false">https://nfs40.online/</guid>
            <pubDate>Sun, 05 Oct 2025 15:49:58 GMT</pubDate>
            <content:encoded><![CDATA[这篇文章庆祝了网络文件系统(NFS)诞生40周年，回顾了这一重要技术的历史和发展历程。NFS由Sun Microsystems开发，成为分布式计算和文件共享领域的标准技术之一。文章介绍了NFS的起源、技术演变以及对现代分布式系统的影响。同时探讨了NFS在云计算和分布式存储环境中的现代应用和挑战。这篇纪念文章既是对技术创新的致敬，也是对网络文件系统未来发展的展望。 [<a href="https://news.ycombinator.com/item?id=45482467" target="_blank">评论</a>]]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[展示HN：ASCII绘图板]]></title>
            <link>https://www.delopsu.com/draw.html</link>
            <guid isPermaLink="false">https://www.delopsu.com/draw.html</guid>
            <pubDate>Sun, 05 Oct 2025 15:36:21 GMT</pubDate>
            <content:encoded><![CDATA[ASCII绘图板是一个基于网页的简单绘图工具，允许用户使用ASCII字符创建和编辑图像。该工具提供基本的绘图功能，如线条、矩形、圆形绘制等，所有操作都通过键盘控制完成的。项目主要面向喜欢复古计算美学或需要创建简单ASCII艺术作品的开发者。该工具的实现展示了如何在有限的字符集下创造视觉内容，同时提供了一个有趣的编程和创意表达平台。 [<a href="https://news.ycombinator.com/item?id=45482333" target="_blank">评论</a>]]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[QNX操作系统]]></title>
            <link>https://www.abortretry.fail/p/the-qnx-operating-system</link>
            <guid isPermaLink="false">https://www.abortretry.fail/p/the-qnx-operating-system</guid>
            <pubDate>Sun, 05 Oct 2025 14:47:13 GMT</pubDate>
            <content:encoded><![CDATA[这篇文章介绍了QNX操作系统，这是一个以微内核架构著称的实时操作系统(RTOS)。QNX以其高度可靠性和安全性而闻名，广泛应用于关键基础设施系统如汽车电子、工业控制和医疗设备等领域。文章详细解释了QNX的微内核设计原理、进程间通信机制以及其独特的实时响应能力。同时讨论了QNX在现代嵌入式系统和智能设备中的应用前景，以及其在物联网时代的技术优势。 [<a href="https://news.ycombinator.com/item?id=45481892" target="_blank">评论</a>]]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[使用ARM SIMD实现86 GB/s的位打包(单线程)]]></title>
            <link>https://github.com/ashtonsix/perf-portfolio/tree/main/bytepack</link>
            <guid isPermaLink="false">https://github.com/ashtonsix/perf-portfolio/tree/main/bytepack</guid>
            <pubDate>Sun, 05 Oct 2025 12:27:11 GMT</pubDate>
            <content:encoded><![CDATA[这个GitHub项目展示了如何在单线程环境下使用ARM SIMD指令集实现高达86 GB/s的位打包性能。位打包是一种数据压缩技术，将多个值压缩到一个更小的存储空间中。作者详细介绍了优化技巧，包括利用ARM NEON指令集、数据对齐和缓存优化等。这项工作在数据密集型应用如数据库、压缩算法和机器学习预处理等领域具有重要价值，展示了现代处理器架构的性能潜力。 [<a href="https://news.ycombinator.com/item?id=45481008" target="_blank">评论</a>]]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[在Framework笔记本电脑和磁盘上自托管10TB S3存储]]></title>
            <link>https://jamesoclaire.com/2025/10/05/self-hosting-10tb-in-s3-on-a-framework-laptop-disks/</link>
            <guid isPermaLink="false">https://jamesoclaire.com/2025/10/05/self-hosting-10tb-in-s3-on-a-framework-laptop-disks/</guid>
            <pubDate>Sun, 05 Oct 2025 09:51:26 GMT</pubDate>
            <content:encoded><![CDATA[这篇文章详细介绍了如何在个人设备上构建相当于Amazon S3功能的自托管存储解决方案，使用Framework笔记本电脑和多个外部磁盘实现10TB的存储容量。作者分享了硬件选择、软件配置、数据冗余策略以及性能优化的完整过程。这种自托管方案适合需要控制数据安全性和隐私的用户，同时提供了本地化存储的经济替代方案。文章还讨论了这种方法的优势、局限性与维护考虑。 [<a href="https://news.ycombinator.com/item?id=45480317" target="_blank">评论</a>]]]></content:encoded>
        </item>
    </channel>
</rss>